search()
search()[1]
search()[[1]]
length(comcast_results)
names(comcast_results)
range(tweet.df$t.stamp)
range(tweets.df$t.stamp)
runApp()
ggplot(data.frame(x = 0, y = 0, text = "No Tweets")) + geom_text()
ggplot(data.frame(x = 0, y = 0, text = "No Tweets"), aes(x = x, y =
  y, label = text) + geom_text()
)
ggplot(data.frame(x = 0, y = 0, text = "No Tweets"), aes(x = x, y =
  y, label = text)) + geom_text()
foo <- rep(FALSE, 3)
foo
foo == TRUE
foo && TRUE
display.brewer.pal(8)
display.brewer.pal()
preview.brewer.pal()
display.brewer.all()
init.plot
init.plot
init.plot
init.plot
init.plot
runApp()
runApp()
runApp()
start.time 
input <- list("timeInStream" = 10)
inds
input <- list("timeInStream" = 10, wordcloud.freq = 10,
  wordcloud.max = 100)
runApp()
runApp()
runApp()
runApp()
runApp()
help(getSymbols)
help(reactive)
runApp()
runApp()
runApp()
input
input
input$timeInStream
input$timeInStream <- 1
input
input$timeInStream <- 5
head(tweets.df$t.stamp < (start.time + 60*input$timeInStream), 20)
head(tweets.df$t.stamp < (start.time + 60*input$timeInStream), 30)
input$timeInStream <- 4
head(tweets.df$t.stamp < (start.time + 60*input$timeInStream), 30)
runApp()
head(foo)
runApp()
runApp()
help(sliderInput)
runApp()
help(sliderInput)
help(sliderInput)
runApp()
runApp()
runApp()
dim(prop.df)
prop.df <- proportion.df
g1
runApp()
runApp()
dim(tweets.df)
dim(prop.df)
dim(tweets.df)
dim(proportion.df)
runApp()
runApp()
display.pal.all()
help(RColorBrewer)
display.brewer.all()
display.brewer.all()
runApp()
head(proportion.df)
runApp()
q()
n
install.packages("shinydashboard")
q()
n
